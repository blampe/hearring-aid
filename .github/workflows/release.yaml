name: release

on:
  push:
    branches: [main]
    paths:
      - docker/Dockerfile
      - docker/Dockerfile.plugins
  pull_request:
    branches: [main]
    paths:
      - docker/Dockerfile
      - docker/Dockerfile.plugins

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]'
    strategy:
      matrix:
        inputs:
          - dockerfile: Dockerfile
            upstream: linuxserver/lidarr
          - dockerfile: Dockerfile.plugins
            upstream: ghcr.io/linuxserver-labs/prarr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract tag
        id: extract
        run: |
          full_image=$(grep -E '^FROM ${{ matrix.inputs.upstream }}' docker/${{ matrix.inputs.dockerfile }} | sed 's/FROM //' | tr -d '\n\r')
          tag=$(echo "$full_image" | sed 's/.*://')
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "Extracted tag: $tag"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: blampe
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Configure metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blampe/lidarr
          tags: |
            type=raw,value=${{ steps.extract.outputs.tag }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: docker/
          file: docker/${{ matrix.inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.event_name != 'pull_request'
        with:
          subject-name: blampe/lidarr
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
